generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   Int    @id
  name String

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Session         Session[]
  OwnershipStatus OwnershipStatus[]
}

model Session {
  id          String   @id @default(uuid())
  key         String   @db.VarChar(512)
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  invalidated Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model Book {
  isbn             String     @id
  title            String?
  subtitle         String?
  authors          Author[]
  publisher        Publisher? @relation(fields: [publisherId], references: [id])
  publishedDate    String?
  description      String?
  pageCount        Int?
  printedPageCount Int?
  language         String?

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  publisherId     String?
  ownershipStatus OwnershipStatus[]
}

model Author {
  id    String @id @default(uuid())
  name  String @unique
  books Book[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Publisher {
  id   String @id @default(uuid())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Book      Book[]
}

model OwnershipStatus {
  user   User       @relation(fields: [userId], references: [id])
  book   Book       @relation(fields: [bookIsbn], references: [isbn])
  status BookStatus

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  bookIsbn  String

  @@id([userId, bookIsbn])
}

enum BookStatus {
  NONE
  OWNED
  WHISHLISTED
}
